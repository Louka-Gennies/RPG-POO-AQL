import Character from './Character.ts';
import Menu from './Menu.ts';
import Fight from './Fight.ts';

class Game {
    team1: Character[];
    team2: Character[];
    fight: Fight;
    menu: Menu;

    constructor(team1: Character[], team2: Character[]) {
        this.team1 = team1;
        this.team2 = team2;
        this.fight = new Fight(team1, team2);
        const questions = ['Choose your action:', 'Choose your target:'];
        const choices = [
            ['Attack', 'Heal', 'Revive'],
            team2.map(character => character.name)
        ];
        this.menu = new Menu(questions, choices, 0);
    }

    async start() {
        console.clear()
        const order = this.fight.order(this.team1, this.team2);

        for (const character of order) {
            console.log(`It's ${character.name}'s turn.`);

            if (this.team1.includes(character)) {
                this.menu.answers = 0;
                const actionChoice = await this.menu.askQuestion();
            
                switch (actionChoice) {
                    case 1: {
                        this.menu.answers = 1;
                        const targetChoice = await this.menu.askQuestion();
                        const enemy = this.team2[targetChoice - 1];
                        this.attack(character, enemy);
                        await new Promise(resolve => setTimeout(resolve, 2000));
                        break;
                    }
                    case 2: {
                        console.log(character.heal(20, character.maxHP, character.currentHP));
                        break;
                    }
                    case 3: {
                        console.log(character.res(20, character.maxHP));
                        break;
                    }
                }
            } else {
                const enemy = this.team1[Math.floor(Math.random() * this.team1.length)];
                this.attack(character, enemy);
            }
        }
    }

    attack(character: Character, enemy: Character) {
        console.log(`Character stats before attack:\n${character.stat(character)}`);
        console.log(`Enemy stats before attack:\n${character.stat(enemy)}`);
        const damage = character.attack(character.physicalAttack, enemy.physicalDefense, enemy.currentHP);
        enemy.currentHP -= damage;
        console.log(`${character.name} attacked ${enemy.name} for ${damage} damage\n`);
        console.log(`Character stats after attack:\n${character.stat(character)}`);
        console.log(`Enemy stats after attack:\n${character.stat(enemy)}`);
    }
}

// Usage
const character1 = new Character('Warrior', 100, 5, 5, 100, 100);
const character2 = new Character('Mage', 5, 3, 10, 50, 50);
const character3 = new Character('Archer', 8, 3, 7, 75, 75);
const character4 = new Character('Knight', 7, 7, 3, 150, 150);
const character5 = new Character('Thief', 6, 2, 8, 60, 60);
const character6 = new Character('Healer', 4, 4, 6, 40, 40);

const team1 = [character1, character2, character3];
const team2 = [character4, character5, character6];

const game = new Game(team1, team2);
game.start();